
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trotto-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: trotto
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    external-dns.alpha.kubernetes.io/hostname: trotto.affirmhq.com
spec:
  rules:
    - host: trotto.affirmhq.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trotto
                port:
                  number: 80

apiVersion: v1
kind: Service
metadata:
  name: trotto
  namespace: trotto
  labels:
    app: trotto
spec:
  selector:
    app: trotto
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trotto
  namespace: trotto
  labels:
    app: trotto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trotto
  template:
    metadata:
      labels:
        app: trotto
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: trotto
        image: 932862063257.dkr.ecr.us-west-1.amazonaws.com/trotto
        ports:
        - containerPort: 80
