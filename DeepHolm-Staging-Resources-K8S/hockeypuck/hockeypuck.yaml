apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hockeypuck-ingress
  namespace: hockeypuck
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: hockeypuck
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    external-dns.alpha.kubernetes.io/hostname: hockeypuck.affirmhq.com
spec:
  rules:
    - host: hockeypuck.affirmhq.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hockeypuck
                port:
                  number: 80

---

apiVersion: v1
kind: Service
metadata:
  name: hockeypuck
  namespace: hockeypuck
spec:
  type: NodePort
  selector:
    app: hockeypuck
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hockeypuck
  namespace: hockeypuck
  labels:
    app: hockeypuck
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hockeypuck
  template:
    metadata:
      labels:
        service: hockeypuck
        app: hockeypuck
    spec:
      containers:
      - name: hockeypuck
        image: 932862063257.dkr.ecr.us-west-1.amazonaws.com/hockeypuck
        ports:
        - containerPort: 80
        volumeMounts:
        - name: hockeypuck-conf
          readOnly: true
          mountPath: /hockeypuck/etc/
      volumes:
      - name: hockeypuck-conf
        configMap:
          name: hockeypuck-conf
          items:
            - key: hockeypuck.conf
              path: hockeypuck.conf